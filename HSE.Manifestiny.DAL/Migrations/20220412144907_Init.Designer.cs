// <auto-generated />
using System;
using System.Collections.Generic;
using HSE.Manifestiny.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HSE.Manifestiny.DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220412144907_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HSE.Manifestiny.DAL.DalModels.CityDAL", b =>
                {
                    b.Property<long>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CityId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CityId");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("HSE.Manifestiny.DAL.DalModels.PlaceDAL", b =>
                {
                    b.Property<long>("PlaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlaceId"));

                    b.Property<List<string>>("Categories")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Contacts")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Lat")
                        .HasColumnType("double precision");

                    b.Property<double>("Lon")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PriceRange")
                        .HasColumnType("integer");

                    b.Property<List<string>>("Tags")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<int>("VisitDuration")
                        .HasColumnType("integer");

                    b.HasKey("PlaceId");

                    b.HasIndex("CityId");

                    b.ToTable("places");
                });

            modelBuilder.Entity("HSE.Manifestiny.DAL.DalModels.TravelTimeDAL", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("PlaceAId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlaceBId")
                        .HasColumnType("bigint");

                    b.Property<int>("TravelTime")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("travelTimes");
                });

            modelBuilder.Entity("HSE.Manifestiny.DAL.DalModels.TripDAL", b =>
                {
                    b.Property<long>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TripId"));

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Route")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("Since")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("To")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TravelType")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("TripId");

                    b.HasIndex("CityId");

                    b.HasIndex("UserId");

                    b.ToTable("trips");
                });

            modelBuilder.Entity("HSE.Manifestiny.DAL.DalModels.UserDAL", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<List<string>>("Categories")
                        .HasColumnType("text[]");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PriceRange")
                        .HasColumnType("integer");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<List<string>>("Tags")
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("HSE.Manifestiny.DAL.DalModels.PlaceDAL", b =>
                {
                    b.HasOne("HSE.Manifestiny.DAL.DalModels.CityDAL", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("HSE.Manifestiny.DAL.DalModels.TripDAL", b =>
                {
                    b.HasOne("HSE.Manifestiny.DAL.DalModels.CityDAL", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HSE.Manifestiny.DAL.DalModels.UserDAL", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
